blueprint:
  name: "Gestion intelligente Velux et Volet"
  description: >
    Gère automatiquement l'ouverture/fermeture d'une fenêtre Velux et de son volet
    en fonction de la température intérieure/extérieure, du thermostat, de l'heure et des conditions météo.
    Utilise un moteur d'état pour appliquer uniquement les changements nécessaires.
  domain: automation
  input:
    thermostat:
      name: Thermostat de la pièce
      selector:
        entity:
          domain: climate
    weather:
      name: Entité météo (Météo-France)
      selector:
        entity:
          domain: weather
    velux:
      name: Entité de la fenêtre Velux
      selector:
        entity:
          domain: cover
    volet:
      name: Entité du volet roulant
      selector:
        entity:
          domain: cover
    sunset_time:
      name: Heure de fermeture du volet (soir)
      selector:
        time:
    sunrise_time:
      name: Heure d'ouverture automatique du matin
      selector:
        time:
    temp_rising:
      name: Indicateur de tendance température monte (booléen)
      description: "Entité binaire indiquant si la température intérieure monte"
      selector:
        entity:
          domain: binary_sensor

mode: single

trigger:
  - platform: time_pattern
    minutes: "/5"
  - platform: time
    at: !input sunrise_time

variables:
  weather_entity: !input weather
  thermostat_entity: !input thermostat
  velux_entity: !input velux
  volet_entity: !input volet
  temp_rising_entity: !input temp_rising

  temp_ext: "{{ state_attr(weather_entity, 'temperature') | float(0) }}"
  temp_target: "{{ state_attr(thermostat_entity, 'temperature') | float(22) }}"
  temp_int: "{{ state_attr(thermostat_entity, 'current_temperature') | float(22) }}"
  velux_state: "{{ states(velux_entity) }}"
  velux_open: "{{ velux_state in ['opening', 'open'] }}"
  volet_state: "{{ states(volet_entity) }}"
  volet_open: "{{ volet_state in ['opening', 'open'] }}"
  temp_rising: "{{ states(temp_rising_entity) == 'on' }}"
  is_night: "{{ now().strftime('%H:%M:%S') > (states('input_datetime.sunset_time') or '21:00:00') }}"

  target_velux_open: >-
    {{ temp_int > temp_target and temp_ext < temp_int and not temp_rising }}
  target_volet_open: false
  target_volet_closed: "{{ is_night }}"

action:
  - variables:
      actions: []

  - if: "{{ not target_velux_open and velux_open }}"
    then:
      - variables:
          actions: "{{ actions + ['close_velux'] }}"
  - if: "{{ target_velux_open and not velux_open }}"
    then:
      - variables:
          actions: "{{ actions + ['open_velux'] }}"

  - if: "{{ target_volet_closed and volet_open }}"
    then:
      - variables:
          actions: "{{ actions + ['close_volet'] }}"
  - if: "{{ not target_volet_closed and not volet_open }}"
    then:
      - variables:
          actions: "{{ actions + ['open_volet'] }}"

  - choose:
      - conditions: "{{ 'close_velux' in actions }}"
        sequence:
          - service: cover.close_cover
            target:
              entity_id: !input velux
  - choose:
      - conditions: "{{ 'open_velux' in actions }}"
        sequence:
          - service: cover.open_cover
            target:
              entity_id: !input velux
  - choose:
      - conditions: "{{ 'close_volet' in actions }}"
        sequence:
          - choose:
              - conditions: "{{ velux_open }}"
                sequence:
                  - service: cover.close_cover
                    target:
                      entity_id: !input velux
                  - delay: "00:00:10"
                  - service: cover.close_cover
                    target:
                      entity_id: !input volet
                  - delay: "00:00:30"
                  - service: cover.open_cover
                    target:
                      entity_id: !input velux
              default:
                - service: cover.close_cover
                  target:
                    entity_id: !input volet
  - choose:
      - conditions: "{{ 'open_volet' in actions }}"
        sequence:
          - service: cover.open_cover
            target:
              entity_id: !input volet