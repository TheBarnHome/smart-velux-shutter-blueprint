blueprint:
  name: "Gestion intelligente Velux et Volet"
  description: >
    Gère automatiquement l'ouverture/fermeture d'une fenêtre Velux et de son volet
    en fonction de la température intérieure/extérieure, du thermostat, de l'heure et des conditions météo.
    Ferme automatiquement le volet la nuit ou lors de fortes chaleurs, en s'assurant que la fenêtre est bien fermée.
    Envoie une notification en cas de changement d'état de la fenêtre ou du volet.
  domain: automation
  input:
    thermostat:
      name: Thermostat de la pièce
      selector:
        entity:
          domain: climate
    temp_int:
      name: Capteur de température intérieure
      selector:
        entity:
          domain: sensor
          device_class: temperature
    weather:
      name: Entité météo (Météo-France)
      selector:
        entity:
          domain: weather
    velux:
      name: Entité de la fenêtre Velux
      selector:
        entity:
          domain: cover
    volet:
      name: Entité du volet roulant
      selector:
        entity:
          domain: cover
    sunset_time:
      name: Heure de fermeture du volet (soir)
      selector:
        time:
    notify_device:
      name: Appareil à notifier
      selector:
        device:
          integration: mobile_app

mode: single

trigger:
  - platform: time_pattern
    minutes: "/5"  # Vérifie toutes les 5 minutes

variables:
  temp_ext: "{{ state_attr(blueprint.input.weather, 'temperature') | float(0) }}"
  temp_int: "{{ states(blueprint.input.temp_int) | float(0) }}"
  temp_target: "{{ state_attr(blueprint.input.thermostat, 'temperature') | float(22) }}"
  is_night: "{{ now().hour >= (states('input_datetime.sunset_time') | as_datetime).hour }}"
  velux_state: "{{ states(blueprint.input.velux) }}"
  velux_open: "{{ velux_state in ['opening', 'open'] }}"
  temp_diff: "{{ temp_int - temp_ext }}"

action:
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ temp_int > temp_target and temp_ext < temp_int and not is_night }}
        sequence:
          - service: cover.open_cover
            target:
              entity_id: !input velux
          - service: notify.mobile_app_{{ device_attr(blueprint.input.notify_device, 'name') | lower | replace(" ", "_") }}
            data:
              message: "Ouverture de la fenêtre Velux pour rafraîchir la pièce."

      - conditions:
          - condition: template
            value_template: >
              {{ temp_int <= temp_target and velux_open }}
        sequence:
          - service: cover.close_cover
            target:
              entity_id: !input velux
          - service: notify.mobile_app_{{ device_attr(blueprint.input.notify_device, 'name') | lower | replace(" ", "_") }}
            data:
              message: "Fermeture de la fenêtre Velux (température atteinte)."

      - conditions:
          - condition: template
            value_template: >
              {{ is_night or (temp_ext > temp_target and temp_int > temp_target) }}
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ velux_open }}"
                sequence:
                  - service: cover.close_cover
                    target:
                      entity_id: !input velux
                  - delay: "00:00:10"
                  - service: cover.close_cover
                    target:
                      entity_id: !input volet
                  - delay: "00:00:30"
                  - service: cover.open_cover
                    target:
                      entity_id: !input velux
                  - service: notify.mobile_app_{{ device_attr(blueprint.input.notify_device, 'name') | lower | replace(" ", "_") }}
                    data:
                      message: "Fermeture du volet après sécurisation de la fenêtre Velux."
          - default:
              - service: cover.close_cover
                target:
                  entity_id: !input volet
              - service: notify.mobile_app_{{ device_attr(blueprint.input.notify_device, 'name') | lower | replace(" ", "_") }}
                data:
                  message: "Fermeture du volet automatique."
